pca_pdfa_individual_structural <- princomp(structural_numeric_features_individual[,1:14], cor = T)
screeplot(pca_pdfa_individual_structural, type = "lines")
pca_scores_pdfa_individual_structural <- as_tibble(pca_pdfa_individual_structural$scores)
pca_scores_pdfa_individual_structural <- pca_scores_pdfa_individual_structural %>%
add_column(Caller = structural_numeric_features_individual$Caller, Context = structural_numeric_features_individual$Context,
Community = structural_numeric_features_individual$Community)
vars_pdfa_individual_structural <- names(pca_scores_pdfa_individual_structural[,1:9])
set.seed(89) # p=0.022
pdfa_individual_structural_NoControl=pDFA.nested(test.fac="Caller", #contr.fac = "Context",
restrict.by = "Community",
variables=vars_pdfa_individual_structural, n.to.sel=NULL,
n.sel=100, n.perm=1000,
pdfa.data=as.data.frame(pca_scores_pdfa_individual_structural))
pdfa_individual_structural_NoControl
View(pca_scores_pdfa_individual_structural)
?sample_n
a<-pca_scores_pdfa_individual_structural %>% group_by(Caller) %>% sample_n(4)
View(a)
b <-pca_scores_pdfa_individual_structural %>% group_by(Caller) %>% sample_n(4)
View(b)
dfares <- candisc(lm(as.matrix(a[, vars_pdfa_individual_structural]) ~ a[, Caller]))
library(candisc)
dfares <- candisc(lm(as.matrix(a[, vars_pdfa_individual_structural]) ~ a[, Caller]))
dfares <- candisc(lm(as.matrix(a[, vars_pdfa_individual_structural]) ~ a[, "Caller"]))
a[, "Caller"]
dfares <- candisc(lm(as.matrix(a[, vars_pdfa_individual_structural]) ~ as.matrix(a[, "Caller"])))
strucmat <- dfares$structure
View(strucmat)
rownames(strucmat)[which.max(abs(strucmat[, 1]))]
round(strucmat[, 1][which.max(abs(strucmat[, 1]))], 3)
repDFA
repDFA_2 <- function(xdata, testfactor, balancefactor, varnames, npercomb = NULL, nrand = 20) {
# empty matrix for storing the results
res <- matrix(ncol = 7, nrow = nrand)
colnames(res) <- c("rand", "df1_best", "df1_load", "df1_pct", "df2_best", "df2_load", "df2_pct")
for(i in 1:nrand) {
res[i, "rand"] <- i
# create balanced data set
tempdata <- xdata %>% group_by(balancefactor) %>% sample_n(4)
# calculate DFA
dfares <- candisc(lm(as.matrix(tempdata[, varnames]) ~ as.matrix(tempdata[, testfactor])))
strucmat <- dfares$structure
pcts <- round(dfares$pct/100, 3)
# extract relevant info
res[i, "df1_best"] <- rownames(strucmat)[which.max(abs(strucmat[, 1]))]
res[i, "df1_load"] <- round(strucmat[, 1][which.max(abs(strucmat[, 1]))], 3)
res[i, "df1_pct"] <- pcts[1]
# do so for the second function if there is one
if(ncol(strucmat) >= 2) {
res[i, "df2_best"] <- rownames(strucmat)[which.max(abs(strucmat[, 2]))]
res[i, "df2_load"] <- round(strucmat[, 2][which.max(abs(strucmat[, 2]))], 3)
res[i, "df2_pct"] <- pcts[2]
}
}
# transform into data frame for output
res <- data.frame(res)
res[, c("rand", "df1_load", "df1_pct", "df2_load", "df2_pct")] <- apply(res[, c("rand", "df1_load", "df1_pct", "df2_load", "df2_pct")], 2, as.numeric)
return(res)
}
pdfa_data_community_climaxes <-
dialects %>% dplyr::select(Community, Caller, Context, all_of(climax_features), -call_1, -durat2_1, -select_1) %>% #, -Pfmaxamp_1, -Pfminamp_1, -F0start_1, -F0end_1, -Pfstart_1, -Pfend_1) %>%
filter(!is.na(duration_1), !is.na(Context))
pdfa_data_community_climaxes %>% group_by(Community) %>% count
a<-pdfa_data_community_climaxes %>% group_by(Community, Caller) %>% count
a %>% ungroup() %>% group_by(Community) %>% summarise(range = range(n), median = median(n))
vars_pdfa_community_climaxes <- names(pdfa_data_community_climaxes[,4:28])
pdfa_community_climaxes <- pDFA.nested(test.fac="Community", contr.fac = "Caller",
variables=vars_pdfa_community_climaxes,
restrict.by=NULL, n.contr.fac.levels.to.sel=NULL,
n.to.sel.per.contr.fac.level=NULL, n.sel=100, n.perm=1000,
pdfa.data=as.data.frame(pdfa_data_community_climaxes))
pdfa_community_climaxes
set.seed(99) #p=0.016
pdfa_community_climaxes <- pDFA.nested(test.fac="Community", contr.fac = "Caller",
variables=vars_pdfa_community_climaxes,
restrict.by=NULL, n.contr.fac.levels.to.sel=NULL,
n.to.sel.per.contr.fac.level=NULL, n.sel=100, n.perm=1000,
pdfa.data=as.data.frame(pdfa_data_community_climaxes))
pdfa_community_climaxes
ImpVars_community_climaxes <- repDFA_2(as.data.frame(pdfa_data_community_climaxes), testfactor = "Community", balancefactor = c("Community", "Caller"), varnames = vars_pdfa_community_climaxes,
npercomb = 8, nrand = 1000)
pdfa_data_community_climaxes %>% group_by(Community, Caller) %>% sample_n(4)
pdfa_data_community_climaxes %>% group_by("Community", "Caller") %>% sample_n(4)
x<-c("Community", "Caller")
pdfa_data_community_climaxes %>% group_by(x) %>% sample_n(4)
x<-paste("Community", "Caller")
x<-paste("Community", "Caller", ",")
x<-paste("Community", "Caller", sep=",")
x<-paste("Community","", "Caller", sep=",")
x<-paste("Community", "Caller", sep=",")
pdfa_data_community_climaxes %>% group_by(x) %>% sample_n(4)
x<-Community, Caller
x<-c(Community, Caller)
pdfa_data_community_climaxes %>% group_by(x[1],x[2]) %>% sample_n(4)
x<-c("Community", "Caller")
pdfa_data_community_climaxes %>% group_by(x[1],x[2]) %>% sample_n(4)
x[1]
x[2]
18*
4
pdfa_data_community_climaxes %>% group_by(x[1]) %>% group_by(x[2]) %>% sample_n(4)
pdfa_data_community_climaxes %>% group_by(x) %>% sample_n(4)
?paste0
paste0(x, collapse = "")
pdfa_data_community_climaxes %>% group_by(paste0(x, collapse = ",") %>% sample_n(4)
paste0(x, collapse = ",")
paste0(x, collapse = ",")
paste0(x, collapse = "","")
pdfa_data_community_climaxes %>% group_by(.groups = x) %>% sample_n(4)
pdfa_data_community_climaxes %>% group_by(.dots = x) %>% sample_n(4)
# create balanced data set
tempdata <- xdata %>% group_by(.dots = balancefactor) %>% sample_n(4)
repDFA_2 <- function(xdata, testfactor, balancefactor, varnames, npercomb = NULL, nrand = 20) {
# empty matrix for storing the results
res <- matrix(ncol = 7, nrow = nrand)
colnames(res) <- c("rand", "df1_best", "df1_load", "df1_pct", "df2_best", "df2_load", "df2_pct")
for(i in 1:nrand) {
res[i, "rand"] <- i
# create balanced data set
tempdata <- xdata %>% group_by(.dots = balancefactor) %>% sample_n(4)
# calculate DFA
dfares <- candisc(lm(as.matrix(tempdata[, varnames]) ~ as.matrix(tempdata[, testfactor])))
strucmat <- dfares$structure
pcts <- round(dfares$pct/100, 3)
# extract relevant info
res[i, "df1_best"] <- rownames(strucmat)[which.max(abs(strucmat[, 1]))]
res[i, "df1_load"] <- round(strucmat[, 1][which.max(abs(strucmat[, 1]))], 3)
res[i, "df1_pct"] <- pcts[1]
# do so for the second function if there is one
if(ncol(strucmat) >= 2) {
res[i, "df2_best"] <- rownames(strucmat)[which.max(abs(strucmat[, 2]))]
res[i, "df2_load"] <- round(strucmat[, 2][which.max(abs(strucmat[, 2]))], 3)
res[i, "df2_pct"] <- pcts[2]
}
}
# transform into data frame for output
res <- data.frame(res)
res[, c("rand", "df1_load", "df1_pct", "df2_load", "df2_pct")] <- apply(res[, c("rand", "df1_load", "df1_pct", "df2_load", "df2_pct")], 2, as.numeric)
return(res)
}
ImpVars_community_climaxes <- repDFA_2(as.data.frame(pdfa_data_community_climaxes), testfactor = "Community", balancefactor = c("Community", "Caller"), varnames = vars_pdfa_community_climaxes,
npercomb = 8, nrand = 1000)
repDFA_2 <- function(xdata, testfactor, balancefactor, varnames, npercomb = NULL, nrand = 20) {
# empty matrix for storing the results
res <- matrix(ncol = 7, nrow = nrand)
colnames(res) <- c("rand", "df1_best", "df1_load", "df1_pct", "df2_best", "df2_load", "df2_pct")
for(i in 1:nrand) {
res[i, "rand"] <- i
# create balanced data set
tempdata <- xdata %>% group_by(.dots = balancefactor) %>% sample_n(npercomb)
# calculate DFA
dfares <- candisc(lm(as.matrix(tempdata[, varnames]) ~ as.matrix(tempdata[, testfactor])))
strucmat <- dfares$structure
pcts <- round(dfares$pct/100, 3)
# extract relevant info
res[i, "df1_best"] <- rownames(strucmat)[which.max(abs(strucmat[, 1]))]
res[i, "df1_load"] <- round(strucmat[, 1][which.max(abs(strucmat[, 1]))], 3)
res[i, "df1_pct"] <- pcts[1]
# do so for the second function if there is one
if(ncol(strucmat) >= 2) {
res[i, "df2_best"] <- rownames(strucmat)[which.max(abs(strucmat[, 2]))]
res[i, "df2_load"] <- round(strucmat[, 2][which.max(abs(strucmat[, 2]))], 3)
res[i, "df2_pct"] <- pcts[2]
}
}
# transform into data frame for output
res <- data.frame(res)
res[, c("rand", "df1_load", "df1_pct", "df2_load", "df2_pct")] <- apply(res[, c("rand", "df1_load", "df1_pct", "df2_load", "df2_pct")], 2, as.numeric)
return(res)
}
ImpVars_community_climaxes <- repDFA_2(as.data.frame(pdfa_data_community_climaxes), testfactor = "Community", balancefactor = c("Community", "Caller"), varnames = vars_pdfa_community_climaxes,
npercomb = 8, nrand = 1000)
View(pdfa_data_community_climaxes)
a<-pdfa_data_community_climaxes %>% group_by(.dots = x) %>% sample_n(8)
18*
8
View(a)
?eigen
a %>% group_by(Community) %>% count
a<-pdfa_data_community_climaxes %>% group_by(.dots = x) %>% sample_n(8) %>% group_by("Community") %>% sample_n(40)
a %>% group_by(Community) %>% count
a<-pdfa_data_community_climaxes %>% group_by(.dots = x) %>% sample_n(8) %>% ungroup() %>% group_by("Community") %>% sample_n(40)
a %>% group_by(Community) %>% count
ImpVars_community_climaxes <- repDFA_2(as.data.frame(pdfa_data_community_climaxes), testfactor = "Community", balancefactor = c("Community", "Caller"), varnames = vars_pdfa_community_climaxes,
npercomb = 8, nrand = 1000)
a<-pca_scores_pdfa_individual_structural %>% group_by(Caller) %>% sample_n(4)
dfares <- candisc(lm(as.matrix(a[, vars_pdfa_individual_structural]) ~ as.matrix(a[, "Caller"])))
View(a)
ImpVars_individual_structural <- repDFA_2(as.data.frame(pca_scores_pdfa_individual_structural), testfactor = "Caller", balancefactor = c("Caller"), varnames = vars_pdfa_individual_structural,
npercomb = 4, nrand = 1000)
table(ImpVars_individual_structural$df1_best)
table(ImpVars_individual_structural$df2_best)
table(ImpVars_individual_structural$df1_best)
View(ImpVars_individual_structural)
vars_pdfa_community_climaxes <- names(pdfa_data_community_climaxes[,4:28])
a<-pdfa_data_community_climaxes %>% group_by(.dots = x) %>% sample_n(8)
View(a)
dfares <- candisc(lm(as.matrix(a[, vars_pdfa_community_climaxes]) ~ as.matrix(a[, "Community"])))
strucmat <- dfares$structure
View(strucmat)
ImpVars_community_climaxes <- repDFA_2(as.data.frame(pdfa_data_community_climaxes), testfactor = "Community", balancefactor = c("Community", "Caller"), varnames = vars_pdfa_community_climaxes,
npercomb = 8, nrand = 1000)
a<-pdfa_data_community_climaxes %>% group_by(.dots = x) %>% sample_n(8)
dfares <- candisc(lm(as.matrix(a[, vars_pdfa_community_climaxes]) ~ as.matrix(a[, "Community"])))
strucmat <- dfares$structure
View(strucmat)
a<-pdfa_data_community_climaxes %>% group_by(.dots = x) %>% sample_n(8)
dfares <- candisc(lm(as.matrix(a[, vars_pdfa_community_climaxes]) ~ as.matrix(a[, "Community"])))
View(a)
a<-pdfa_data_community_climaxes %>% group_by(.dots = x) %>% sample_n(8)
dfares <- candisc(lm(as.matrix(a[, vars_pdfa_community_climaxes]) ~ as.matrix(a[, "Community"])))
strucmat <- dfares$structure
View(strucmat)
a<-pdfa_data_community_climaxes %>% group_by(.dots = x) %>% sample_n(8)
dfares <- candisc(lm(as.matrix(a[, vars_pdfa_community_climaxes]) ~ as.matrix(a[, "Community"])))
a<-pdfa_data_community_climaxes %>% group_by(.dots = x) %>% sample_n(8)
dfares <- candisc(lm(as.matrix(a[, vars_pdfa_community_climaxes]) ~ as.matrix(a[, "Community"])))
View(a)
table(ImpVars_individual_structural$df1_best)
table(ImpVars_individual_structural$df2_best)
a<-structural_numeric_features_individual_gombe %>% group_by(Caller) %>% count
structural_numeric_features_individual_gombe <- as.data.frame(structural_numeric_features)
names(structural_numeric_features_individual_gombe) <- make.names(names(structural_numeric_features_individual_gombe))
structural_numeric_features_individual_gombe <- structural_numeric_features_individual_gombe %>%
filter(Community != "Kanyawara")
number_by_caller_individual_structural_gombe <- structural_numeric_features_individual_gombe %>% group_by(Caller) %>% count
a<-structural_numeric_features_individual_gombe %>% group_by(Caller) %>% count
View(a)
pca_pdfa_individual_structural_gombe <- princomp(structural_numeric_features_individual_gombe[,1:14], cor = T)
pca_scores_pdfa_individual_structural_gombe <- as_tibble(pca_pdfa_individual_structural_gombe$scores)
pca_scores_pdfa_individual_structural_gombe <- pca_scores_pdfa_individual_structural_gombe %>%
add_column(Caller = structural_numeric_features_individual_gombe$Caller, Context = structural_numeric_features_individual_gombe$Context,
Community = structural_numeric_features_individual_gombe$Community)
vars_pdfa_individual_structural_gombe <- names(pca_scores_pdfa_individual_structural_gombe[,1:7])
ImpVars_individual_structural_gombe <- repDFA_2(as.data.frame(pca_scores_pdfa_individual_structural_gombe), testfactor = "Caller", balancefactor = c("Caller"), varnames = vars_pdfa_individual_structural_gombe,
npercomb = 4, nrand = 1000)
table(ImpVars_individual_structural_gombe$df1_best)
pca_pdfa_individual_structural_gombe$loadings
table(ImpVars_individual_structural_gombe$df2_best)
pca_pdfa_individual_structural$loadings
table(ImpVars_individual_structural$df1_best)
table(ImpVars_individual_structural$df2_best)
pdfa_data_individual_climaxes <-
dialects %>% dplyr::select(Community, Caller, Context, all_of(climax_features), -call_1, -durat2_1, -select_1) %>%     # -noise_mean_1, -noise_max_1, -trfak_1, -Pfmaxamp_1, -Pfminamp_1, -Pfmaxloc_1, -Pfminloc_1, -Pfmaxdif_1, -F0start_1, -trmean_1, -trmax_1, -lmmean_1, -lmmax_1, -F0end_1, -Pfstart_1, -Pfend_1) %>%
dplyr::filter(!is.na(duration_1), !is.na(Context))
pdfa_data_individual_climaxes %>% group_by(Community, Caller) %>% count
pca_pdfa_individual_climaxes <- princomp(pdfa_data_individual_climaxes[,4:28], cor = T)
pca_scores_pdfa_individual_climaxes <- as_tibble(pca_pdfa_individual_climaxes$scores)
pca_scores_pdfa_individual_climaxes <- pca_scores_pdfa_individual_climaxes %>%
add_column(Community = pdfa_data_individual_climaxes$Community, Caller = pdfa_data_individual_climaxes$Caller,
Context = pdfa_data_individual_climaxes$Context)
vars_pdfa_individual_climaxes <- names(pca_scores_pdfa_individual_climaxes[,1:8])
ImpVars_individual_climaxes <- repDFA_2(as.data.frame(pca_scores_pdfa_individual_climaxes), testfactor = "Caller", balancefactor = c("Caller"), varnames = vars_pdfa_individual_climaxes,
npercomb = 4, nrand = 1000)
ImpVars_individual_climaxes <- repDFA_2(as.data.frame(pca_scores_pdfa_individual_climaxes), testfactor = "Caller", balancefactor = c("Caller"), varnames = vars_pdfa_individual_climaxes,
npercomb = 8, nrand = 1000)
table(ImpVars_individual_climaxes$df1_best)
table(ImpVars_individual_climaxes$df2_best)
vars_pdfa_individual_climaxes
pca_pdfa_individual_climaxes$loadings
repDFA_nested <- function(xdata, testfactor, balancefactor, varnames, npercomb = NULL, nrand = 20) {
# empty matrix for storing the results
res <- matrix(ncol = 7, nrow = nrand)
colnames(res) <- c("rand", "df1_best", "df1_load", "df1_pct", "df2_best", "df2_load", "df2_pct")
for(i in 1:nrand) {
res[i, "rand"] <- i
# create balanced data set
tempdata <- xdata %>% group_by(.dots = balancefactor) %>% sample_n(npercomb)
# calculate DFA
dfares <- candisc(lm(as.matrix(tempdata[, varnames]) ~ as.matrix(tempdata[, testfactor])))
strucmat <- dfares$structure
pcts <- round(dfares$pct/100, 3)
# extract relevant info
res[i, "df1_best"] <- rownames(strucmat)[which.max(abs(strucmat[, 1]))]
res[i, "df1_load"] <- round(strucmat[, 1][which.max(abs(strucmat[, 1]))], 3)
res[i, "df1_pct"] <- pcts[1]
# do so for the second function if there is one
if(ncol(strucmat) >= 2) {
res[i, "df2_best"] <- rownames(strucmat)[which.max(abs(strucmat[, 2]))]
res[i, "df2_load"] <- round(strucmat[, 2][which.max(abs(strucmat[, 2]))], 3)
res[i, "df2_pct"] <- pcts[2]
}
}
# transform into data frame for output
res <- data.frame(res)
res[, c("rand", "df1_load", "df1_pct", "df2_load", "df2_pct")] <- apply(res[, c("rand", "df1_load", "df1_pct", "df2_load", "df2_pct")], 2, as.numeric)
return(res)
}
pdfa_data_individual_complete <-
complete_calls %>% dplyr::select(Community, Caller, Context, all_of(structural_features_numeric), all_of(buildup_features), all_of(climax_features), -call, -durat2, -select, -call_1, -durat2_1, -select_1) %>% #, -Pfmaxamp_1, -Pfminamp_1, -F0start_1, -F0end_1, -Pfstart_1, -Pfend_1) %>%
dplyr::filter(complete.cases(.))
pdfa_data_individual_complete %>% group_by(Community, Caller) %>% count
pdfa_data_individual_complete <- pdfa_data_individual_complete %>% filter(!Caller %in% c("ZS"))
pdfa_data_individual_complete %>% group_by(Community, Caller) %>% count
pca_pdfa_individual_complete <- princomp(pdfa_data_individual_complete[,4:66], cor = T)
pca_pdfa_individual_complete$loadings
pca_scores_pdfa_individual_complete <- as_tibble(pca_pdfa_individual_complete$scores)
pca_scores_pdfa_individual_complete <- pca_scores_pdfa_individual_complete %>%
add_column(Community = pdfa_data_individual_complete$Community, Caller = pdfa_data_individual_complete$Caller,
Context = pdfa_data_individual_complete$Context)
vars_pdfa_individual_complete <- names(pca_scores_pdfa_individual_complete[,1:3])
ImpVars_individual_complete <- repDFA_nested(as.data.frame(pca_scores_pdfa_individual_complete), testfactor = "Caller", balancefactor = c("Caller"), varnames = vars_pdfa_individual_complete,
npercomb = 3, nrand = 1000)
table(ImpVars_individual_complete$df1_best)
table(ImpVars_individual_complete$df2_best)
View(pca_pdfa_individual_complete$loadings)
View(as.data.frame(pca_pdfa_individual_complete$loadings))
pdfa_data_individual_complete_gombe <- pdfa_data_individual_complete %>%
filter(Community != "Kanyawara")
as.data.frame(pca_pdfa_individual_complete$loadings)
View(pca_pdfa_individual_complete)
pca_pdfa_individual_complete[["loadings"]]
options(max.print=1000000)
pca_pdfa_individual_complete[["loadings"]]
pca_pdfa_individual_complete[["loadings"]][Comp.2]
pca_pdfa_individual_complete[["loadings"]]["Comp.2"]
pca_pdfa_individual_complete[["loadings"]][1]
pca_pdfa_individual_complete[["loadings"]][2]
pca_pdfa_individual_complete[["loadings"]][1:64]
pca_pdfa_individual_complete[["loadings"]][1:656]
loadings(pca_pdfa_individual_complete)
x<-loadings(pca_pdfa_individual_complete)
x[1]
x[,1]
x[,2]
max(x[,2])
sort(x[,2])
component2 <- sort(loadings(pca_pdfa_individual_complete)[,2])
sort(loadings(pca_pdfa_individual_complete)[,2])
sort(loadings(pca_pdfa_individual_complete)[,2], decreasing = T)
sort(abs(loadings(pca_pdfa_individual_complete)[,2], decreasing = T))
sort(abs(loadings(pca_pdfa_individual_complete)[,2]), decreasing = T)
ImpVars_individual_structural <- repDFA_nested(as.data.frame(pca_scores_pdfa_individual_structural), testfactor = "Caller", balancefactor = c("Caller"), varnames = vars_pdfa_individual_structural,
npercomb = 4, nrand = 1000)
table(ImpVars_individual_structural$df1_best)
table(ImpVars_individual_structural$df2_best)
sort(abs(loadings(pca_pdfa_individual_structural)[,2]), decreasing = T)
sort(abs(loadings(pca_pdfa_individual_structural)[,7]), decreasing = T)
ImpVars_context_structural <- repDFA(as.data.frame(pca_scores_pdfa_context_structural), testfactor = "Context", balancefactor = c("Context", "Caller"), varnames = vars_pdfa_context_structural,
npercomb = 3, nrand = 1000)
table(ImpVars_context_structural$df1_best)
sort(abs(loadings(pca_pdfa_context_structural)[,6]), decreasing = T)
sort(abs(loadings(pca_pdfa_context_structural)[,1]), decreasing = T)
sort(abs(loadings(pca_pdfa_context_structural)[,2]), decreasing = T)
vars_pdfa_community_climaxes <- names(pca_scores_pdfa_community_climaxes[,2:24])
pca_pdfa_community_climaxes <- princomp(pdfa_data_community_climaxes[,4:28], cor = T)
screeplot(pca_pdfa_community_climaxes_gombe, npcs = 20, type = "lines")
screeplot(pca_pdfa_community_climaxes, npcs = 20, type = "lines")
summary(pca_pdfa_community_climaxes)
vars_pdfa_community_climaxes <- names(pca_scores_pdfa_community_climaxes[,1:13])
pca_scores_pdfa_community_climaxes <- as_tibble(pca_pdfa_community_climaxes$scores)
pca_scores_pdfa_community_climaxes <- pca_scores_pdfa_community_climaxes %>%
add_column(Caller = pdfa_data_community_climaxes$Caller, Community = pdfa_data_community_climaxes$Community)
vars_pdfa_community_climaxes <- names(pca_scores_pdfa_community_climaxes[,1:13])
set.seed(99) #p=0.016
pdfa_community_climaxes <- pDFA.nested(test.fac="Community", contr.fac = "Caller",
variables=vars_pdfa_community_climaxes,
restrict.by=NULL, n.contr.fac.levels.to.sel=NULL,
n.to.sel.per.contr.fac.level=NULL, n.sel=100, n.perm=1000,
pdfa.data=as.data.frame(pca_scores_pdfa_community_climaxes))
pdfa_community_climaxes
ImpVars_community_climaxes <- repDFA_nested(as.data.frame(pca_scores_pdfa_community_climaxes), testfactor = "Community", balancefactor = c("Community", "Caller"), varnames = vars_pdfa_community_climaxes,
npercomb = 8, nrand = 1000)
table(ImpVars_context_structura$df1_best)
table(ImpVars_community_climaxes$df1_best)
table(ImpVars_community_climaxes$df2_best)
sort(abs(loadings(pca_pdfa_community_climaxes)[,4]), decreasing = T)
sort(abs(loadings(pca_pdfa_community_climaxes)[,2]), decreasing = T)
ImpVars_community_climaxes
pdfa_data_community_climaxes <-
dialects %>% dplyr::select(Community, Caller, Context, all_of(climax_features), -call_1, -durat2_1, -select_1) %>% #, -Pfmaxamp_1, -Pfminamp_1, -F0start_1, -F0end_1, -Pfstart_1, -Pfend_1) %>%
filter(!is.na(duration_1), !is.na(Context))
pdfa_data_community_climaxes %>%
select_if(is.numeric) %>%
skimr::skim()
pdfa_data_community_climaxes %>% group_by(Community) %>% count
a<-pdfa_data_community_climaxes %>% group_by(Community, Caller) %>% count
a %>% ungroup() %>% group_by(Community) %>% summarise(range = range(n), median = median(n))
pca_pdfa_community_climaxes <- princomp(pdfa_data_community_climaxes[,4:28], cor = T)
screeplot(pca_pdfa_community_climaxes, npcs = 20, type = "lines")
summary(pca_pdfa_community_climaxes)
pca_scores_pdfa_community_climaxes <- as_tibble(pca_pdfa_community_climaxes$scores)
pca_scores_pdfa_community_climaxes <- pca_scores_pdfa_community_climaxes %>%
add_column(Caller = pdfa_data_community_climaxes$Caller, Community = pdfa_data_community_climaxes$Community)
vars_pdfa_community_climaxes <- names(pca_scores_pdfa_community_climaxes[,1:13])
set.seed(99) #p=0.016/7
pdfa_community_climaxes <- pDFA.nested(test.fac="Community", contr.fac = "Caller",
variables=vars_pdfa_community_climaxes,
restrict.by=NULL, n.contr.fac.levels.to.sel=NULL,
n.to.sel.per.contr.fac.level=NULL, n.sel=100, n.perm=1000,
pdfa.data=as.data.frame(pca_scores_pdfa_community_climaxes))
pdfa_community_climaxes
ImpVars_community_climaxes <- repDFA_nested(as.data.frame(pca_scores_pdfa_community_climaxes), testfactor = "Community", balancefactor = c("Community", "Caller"), varnames = vars_pdfa_community_climaxes,
npercomb = 8, nrand = 1000)
table(ImpVars_community_climaxes$df1_best)
table(ImpVars_community_climaxes$df2_best)
sort(abs(loadings(pca_pdfa_community_climaxes)[,4]), decreasing = T)
sort(abs(loadings(pca_pdfa_community_climaxes)[,2]), decreasing = T)
sort(abs(loadings(pca_pdfa_community_climaxes)[,3]), decreasing = T)
climax_numeric_features <- dialects %>%
dplyr::select(all_of(climax_features)) %>%
dplyr::select_if(is.numeric) %>%
dplyr::select(-durat2_1) %>%
add_column(Community = dialects$Community, Individual = dialects$Caller, Context = dialects$Context)
hist(climax_numeric_features$F0max_1)
hist(climax_numeric_features$trfak_1)
hist(climax_numeric_features$duration_1)
hist(climax_numeric_features$F0loc_1)
library(lmerTest)
CliF0max <- lmer(trfak_1 ~ Community + (1|Individual), data = climax_numeric_features)
summary(CliF0max)
Clidur <- lmer(duration_1 ~ Community + (1|Individual), data = climax_numeric_features)
summary(Clidur)
CliF0loc <- lmer(F0loc_1 ~ Community + (1|Individual), data = climax_numeric_features)
summary(CliF0loc)
Clinoisemean <- lmer(noise_mean_1 ~ Community + (1|Individual), data = climax_numeric_features)
summary(Clinoisemean)
Clinoisemax <- lmer(noise_max_1 ~ Community + (1|Individual), data = climax_numeric_features)
summary(Clinoisemax)
CliPfmaxdif <- lmer(Pfmaxdif_1 ~ Community + (1|Individual), data = climax_numeric_features)
summary(CliPfmaxdif)
Clitrfak <- lmer(trfak_1 ~ Community + (1|Individual), data = climax_numeric_features)
summary(Clitrfak)
summary(Clitrfak)
summary(Clidur)
summary(CliF0loc)
summary(Clinoisemean)
summary(Clinoisemax)
summary(CliPfmaxdif)
p<- c(0.8347,0.0392,0.612,0.179,0.5726,0.0864,0.00443,5.85e-07,3.55e-06,2.67e-08,0.000216,0.662041)
p.adjust(p, "BH")
summary(Clidur)
summary(CliF0loc)
sort(abs(loadings(pca_pdfa_community_climaxes)[,4]), decreasing = T)
sort(abs(loadings(pca_pdfa_community_climaxes)[,3]), decreasing = T)
sort(abs(loadings(pca_pdfa_community_climaxes)[,2]), decreasing = T)
ImpVars_community_climaxes
sort(abs(loadings(pca_pdfa_community_climaxes)[,4]), decreasing = T)
sort(abs(loadings(pca_pdfa_community_climaxes)[,2]), decreasing = T)
sort(abs(loadings(pca_pdfa_community_climaxes)[,1]), decreasing = T)
table(ImpVars_individual_structural$df1_best)
table(ImpVars_individual_structural$df2_best)
sort(abs(loadings(pca_pdfa_individual_structural)[,2]), decreasing = T)
sort(abs(loadings(pca_pdfa_individual_structural)[,7]), decreasing = T)
table(ImpVars_individual_climaxes$df1_best)
table(ImpVars_individual_climaxes$df2_best)
sort(abs(loadings(pca_pdfa_individual_climaxes)[,1]), decreasing = T)
sort(abs(loadings(pca_pdfa_individual_climaxes)[,3]), decreasing = T)
table(ImpVars_individual_complete$df1_best)
table(ImpVars_individual_complete$df2_best)
sort(abs(loadings(pca_pdfa_individual_complete)[,2]), decreasing = T)
sort(abs(loadings(pca_pdfa_individual_complete)[,3]), decreasing = T)
sort(abs(loadings(pca_pdfa_individual_complete)[,1]), decreasing = T)
table(ImpVars_individual_structural$df1_best)
table(ImpVars_individual_structural$df2_best)
367+252
199+224
sort(abs(loadings(pca_pdfa_individual_structural)[,2]), decreasing = T)
sort(abs(loadings(pca_pdfa_individual_structural)[,7]), decreasing = T)
a<- dialects %>%
filter(Context != "Display", Context != "Resting")
a<- dialects %>%
filter(complete.cases(.))
climax_comp <- glmer(`Climax components` ~ Caller + (1|Context) + (1|Community/Caller), family = poisson, data = dialects)
summary(climax_comp)
hist(dialects$`Duration (B to L)`)
durationBL <- lmer(`Duration (B to L)` ~ Caller + (1|Context) + (1|Community/Caller), data = dialects)
summary(durationBL)
durationBL <- lmer(`Duration (B to L)` ~ Caller + (1|Context) + (1|Community), data = dialects)
durationBL <- lmer(`Duration (B to L)` ~ Caller + (1|Community), data = dialects)
summary(durationBL)
climax_scr <- glmer(`Climax screams` ~ Caller + (1|Context) + (1|Community), family = poisson, data = a)
summary(climax)
summary(climax_scr)
climax_scr <- glmer(`Climax screams` ~ Caller + (1|Context) + (1|Community), family = poisson, data = dialects)
summary(climax_scr)
sort(abs(loadings(pca_pdfa_individual_structural)[,2]), decreasing = T)
sort(abs(loadings(pca_pdfa_individual_structural)[,7]), decreasing = T)
table(ImpVars_individual_climaxes$df1_best)
sort(abs(loadings(pca_pdfa_individual_climaxes)[,1]), decreasing = T)
table(ImpVars_individual_climaxes$df2_best)
sort(abs(loadings(pca_pdfa_individual_climaxes)[,3]), decreasing = T)
sort(abs(loadings(pca_pdfa_context_structural)[,6]), decreasing = T)
sort(abs(loadings(pca_pdfa_context_structural)[,1]), decreasing = T)
table(ImpVars_context_structural$df1_best)
table(ImpVars_context_structural$df2_best)
table(ImpVars_individual_climaxes$df1_best)
table(ImpVars_individual_climaxes$df2_best)
sort(abs(loadings(pca_pdfa_individual_climaxes)[,1]), decreasing = T)
sort(abs(loadings(pca_pdfa_individual_climaxes)[,3]), decreasing = T)
summary(climax_scr)
summary(durationBL)
summary(climax_comp)
climax_comp <- glmer(`Climax components` ~ Caller + (1|Context) + (1|Community), family = poisson, data = dialects)
summary(climax_comp)
climax_comp <- glmer(`Climax components` ~ Caller + (1|Context), family = poisson, data = dialects)
summary(climax_comp)
table(ImpVars_individual_climaxes$df1_best)
table(ImpVars_individual_climaxes$df2_best)
sort(abs(loadings(pca_pdfa_individual_climaxes)[,1]), decreasing = T)
sort(abs(loadings(pca_pdfa_individual_climaxes)[,3]), decreasing = T)
table(ImpVars_individual_complete$df1_best)
table(ImpVars_individual_complete$df2_best)
sort(abs(loadings(pca_pdfa_individual_complete)[,2]), decreasing = T)
sort(abs(loadings(pca_pdfa_individual_complete)[,3]), decreasing = T)
sort(abs(loadings(pca_pdfa_individual_complete)[,1]), decreasing = T)
summary(durationBL)
lmer(F0max_1 ~ Caller + (1|Community), data = dialects)
F0max <- lmer(F0max_1 ~ Caller + (1|Community), data = dialects)
summary(F0max)
F0mean <- lmer(F0mean_1 ~ Caller + (1|Community), data = dialects)
summary(F0mean)
